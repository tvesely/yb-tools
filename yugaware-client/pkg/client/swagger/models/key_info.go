// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KeyInfo key info
//
// swagger:model KeyInfo
type KeyInfo struct {

	// air gap install
	AirGapInstall bool `json:"airGapInstall,omitempty"`

	// delete remote
	DeleteRemote bool `json:"deleteRemote,omitempty"`

	// install node exporter
	InstallNodeExporter bool `json:"installNodeExporter,omitempty"`

	// node exporter port
	NodeExporterPort int32 `json:"nodeExporterPort,omitempty"`

	// node exporter user
	NodeExporterUser string `json:"nodeExporterUser,omitempty"`

	// ntp servers
	NtpServers []string `json:"ntpServers"`

	// passwordless sudo access
	PasswordlessSudoAccess bool `json:"passwordlessSudoAccess,omitempty"`

	// private key
	PrivateKey string `json:"privateKey,omitempty"`

	// provision instance script
	ProvisionInstanceScript string `json:"provisionInstanceScript,omitempty"`

	// public key
	PublicKey string `json:"publicKey,omitempty"`

	// set up chrony
	SetUpChrony bool `json:"setUpChrony,omitempty"`

	// show set up chrony
	ShowSetUpChrony bool `json:"showSetUpChrony,omitempty"`

	// skip provisioning
	SkipProvisioning bool `json:"skipProvisioning,omitempty"`

	// ssh port
	SSHPort int32 `json:"sshPort,omitempty"`

	// ssh user
	SSHUser string `json:"sshUser,omitempty"`

	// vault file
	VaultFile string `json:"vaultFile,omitempty"`

	// vault password file
	VaultPasswordFile string `json:"vaultPasswordFile,omitempty"`
}

// Validate validates this key info
func (m *KeyInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this key info based on context it is used
func (m *KeyInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *KeyInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *KeyInfo) UnmarshalBinary(b []byte) error {
	var res KeyInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
