// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UniverseResourceDetails universe resource details
//
// swagger:model UniverseResourceDetails
type UniverseResourceDetails struct {

	// Azs
	// Unique: true
	AzList []string `json:"azList"`

	// EBS price per hour
	EbsPricePerHour float64 `json:"ebsPricePerHour,omitempty"`

	// gp3 free piops
	Gp3FreePiops int32 `json:"gp3FreePiops,omitempty"`

	// gp3 free throughput
	Gp3FreeThroughput int32 `json:"gp3FreeThroughput,omitempty"`

	// Memory GB
	MemSizeGB float64 `json:"memSizeGB,omitempty"`

	// Numbers of cores
	NumCores float64 `json:"numCores,omitempty"`

	// Numbers of node
	NumNodes int32 `json:"numNodes,omitempty"`

	// Price per hour
	PricePerHour float64 `json:"pricePerHour,omitempty"`

	// Known pricing info
	PricingKnown bool `json:"pricingKnown,omitempty"`

	// Volume count
	VolumeCount int32 `json:"volumeCount,omitempty"`

	// Volume in GB
	VolumeSizeGB int32 `json:"volumeSizeGB,omitempty"`
}

// Validate validates this universe resource details
func (m *UniverseResourceDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAzList(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UniverseResourceDetails) validateAzList(formats strfmt.Registry) error {
	if swag.IsZero(m.AzList) { // not required
		return nil
	}

	if err := validate.UniqueItems("azList", "body", m.AzList); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this universe resource details based on context it is used
func (m *UniverseResourceDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UniverseResourceDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UniverseResourceDetails) UnmarshalBinary(b []byte) error {
	var res UniverseResourceDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
