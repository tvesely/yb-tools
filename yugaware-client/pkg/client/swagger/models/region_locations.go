// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RegionLocations region locations
//
// swagger:model RegionLocations
type RegionLocations struct {

	// l o c a t i o n
	// Required: true
	LOCATION *string `json:"LOCATION"`

	// r e g i o n
	// Required: true
	REGION *string `json:"REGION"`
}

// Validate validates this region locations
func (m *RegionLocations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLOCATION(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateREGION(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RegionLocations) validateLOCATION(formats strfmt.Registry) error {

	if err := validate.Required("LOCATION", "body", m.LOCATION); err != nil {
		return err
	}

	return nil
}

func (m *RegionLocations) validateREGION(formats strfmt.Registry) error {

	if err := validate.Required("REGION", "body", m.REGION); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this region locations based on context it is used
func (m *RegionLocations) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RegionLocations) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RegionLocations) UnmarshalBinary(b []byte) error {
	var res RegionLocations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
